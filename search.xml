<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PyQt入门2——构建一个标注数据处理功能界面</title>
      <link href="/2024/02/25/PyQt%E5%85%A5%E9%97%A82%E2%80%94%E2%80%94%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A0%87%E6%B3%A8%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%8A%9F%E8%83%BD%E7%95%8C%E9%9D%A2/"/>
      <url>/2024/02/25/PyQt%E5%85%A5%E9%97%A82%E2%80%94%E2%80%94%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A0%87%E6%B3%A8%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%8A%9F%E8%83%BD%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>将处理标注数据的功能脚本集成到一个简单的可视化界面。</p><h3 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h3><h4 id="1、主窗口"><a href="#1、主窗口" class="headerlink" title="1、主窗口"></a>1、主窗口</h4><p>包含一个功能选择按钮。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ----------创建主窗口----------</span></span><br><span class="line">self.setWindowTitle(<span class="string">&#x27;数据处理平台&#x27;</span>)</span><br><span class="line">self.resize(<span class="number">640</span>, <span class="number">480</span>) <span class="comment"># 窗口大小</span></span><br><span class="line"><span class="comment"># self.setGeometry(100, 100, 640, 480)</span></span><br><span class="line"></span><br><span class="line">self.button_txt = QPushButton(<span class="string">&#x27;功能选择&#x27;</span>, self)</span><br><span class="line">self.button_txt.setGeometry(<span class="number">20</span>, <span class="number">20</span>, <span class="number">130</span>, <span class="number">30</span>)</span><br></pre></td></tr></table></figure><h4 id="2、功能选择（多功能）"><a href="#2、功能选择（多功能）" class="headerlink" title="2、功能选择（多功能）"></a>2、功能选择（多功能）</h4><p>以下拉框的形式进行选择，通过点击选项触发对应功能窗口。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ----------创建下拉菜单----------</span></span><br><span class="line"><span class="comment"># 创建下拉菜单</span></span><br><span class="line">self.combobox_txt = QComboBox(self)</span><br><span class="line">self.combobox_txt.addItems([<span class="string">&#x27;未选择&#x27;</span>, <span class="string">&#x27;xml2txt&#x27;</span>, <span class="string">&#x27;change xml label&#x27;</span>])</span><br><span class="line"><span class="comment"># self.combobox_txt.hide()  # 初始隐藏下拉菜单</span></span><br><span class="line"><span class="comment"># self.combobox_txt.setCurrentIndex(-1)  # 设置初始索引为 -1, 必须在添加控件之前设置</span></span><br><span class="line">self.combobox_txt.setGeometry(self.button_txt.x(), self.button_txt.y() + self.button_txt.height(), <span class="number">130</span>, <span class="number">30</span>)</span><br><span class="line">self.combobox_txt.activated.connect(</span><br><span class="line">            <span class="keyword">lambda</span>: self.switch_page(self.combobox_txt, self.stacked_widget))  <span class="comment"># 绑定选择事件, activated会自动传输index，从0开始。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------创建下拉菜单对应的切换界面----------</span></span><br><span class="line">self.stacked_widget = QStackedWidget(self)  <span class="comment"># 创建叠加窗口</span></span><br><span class="line">self.stacked_widget.setGeometry(<span class="number">50</span>, <span class="number">100</span>, <span class="number">600</span>, <span class="number">600</span>)  <span class="comment"># 设置窗口位置</span></span><br></pre></td></tr></table></figure><h4 id="3、触发切换界面"><a href="#3、触发切换界面" class="headerlink" title="3、触发切换界面"></a>3、触发切换界面</h4><p>activated槽函数switch_page，触发界面切换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -----下拉选项触发-----</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">switch_page</span>(<span class="params">self, combobox, stacked_widget</span>):</span></span><br><span class="line">    index = combobox.currentIndex()</span><br><span class="line">    stacked_widget.setCurrentIndex(index)</span><br></pre></td></tr></table></figure><h4 id="4、不同功能界面"><a href="#4、不同功能界面" class="headerlink" title="4、不同功能界面"></a>4、不同功能界面</h4><p>在对应界面添加文本框（QLabel类）、输入框控件（QLineEdit类）、按钮控件（QPushButton类），setPlaceholderText类表示在输入框中添加文字提示，提示输入参数格式示例。按钮控件点击触发功能函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ----------切换界面示例----------</span></span><br><span class="line"><span class="comment"># page1  xml to txt</span></span><br><span class="line">self.page1_xml = QWidget()</span><br><span class="line"></span><br><span class="line">self.page1_label1_xml = QLabel(<span class="string">&#x27;img_root:&#x27;</span>, self.page1_xml)  <span class="comment"># 在page1里面添加输入框控件</span></span><br><span class="line">self.page1_label1_xml.setGeometry(<span class="number">25</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">self.page1_input_field1_xml = QLineEdit(self.page1_xml)</span><br><span class="line">self.page1_input_field1_xml.setPlaceholderText(<span class="string">&quot;输入图片地址：./ImgFilePath&quot;</span>)</span><br><span class="line">self.page1_input_field1_xml.setGeometry(<span class="number">110</span>, <span class="number">25</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">self.page1_label2_xml = QLabel(<span class="string">&#x27;xml_root:&#x27;</span>, self.page1_xml)</span><br><span class="line">self.page1_label2_xml.setGeometry(<span class="number">25</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># (x,y, h, w)</span></span><br><span class="line">self.page1_input_field2_xml = QLineEdit(self.page1_xml)</span><br><span class="line">self.page1_input_field2_xml.setPlaceholderText(<span class="string">&quot;输入xml地址：./XmlFilePath&quot;</span>)</span><br><span class="line">self.page1_input_field2_xml.setGeometry(<span class="number">110</span>, <span class="number">55</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">self.page1_label3_xml = QLabel(<span class="string">&#x27;classes:&#x27;</span>, self.page1_xml)</span><br><span class="line">self.page1_label3_xml.setGeometry(<span class="number">25</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">self.page1_input_field3_xml = QLineEdit(self.page1_xml)</span><br><span class="line">self.page1_input_field3_xml.setPlaceholderText(<span class="string">&quot;输入类别列表格式：[fg, a1], 字符也不用引号&quot;</span>)</span><br><span class="line">self.page1_input_field3_xml.setGeometry(<span class="number">110</span>, <span class="number">85</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">self.page1_label4_xml = QLabel(<span class="string">&#x27;save_txt_root:&#x27;</span>, self.page1_xml)</span><br><span class="line">self.page1_label4_xml.setGeometry(<span class="number">10</span>, <span class="number">110</span>, <span class="number">120</span>, <span class="number">30</span>)  <span class="comment"># (x,y, h, w)</span></span><br><span class="line">self.page1_input_field4_xml = QLineEdit(self.page1_xml)</span><br><span class="line">self.page1_input_field4_xml.setPlaceholderText(<span class="string">&quot;输入txt保存地址：./TxtFilePath&quot;</span>)</span><br><span class="line">self.page1_input_field4_xml.setGeometry(<span class="number">130</span>, <span class="number">115</span>, <span class="number">280</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">self.stacked_widget.addWidget(self.page1_xml)</span><br></pre></td></tr></table></figure><h4 id="5、参数接收"><a href="#5、参数接收" class="headerlink" title="5、参数接收"></a>5、参数接收</h4><p>对输入框中的信息进行接收，获取数据为str类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xml2txt_button_click</span>(<span class="params">self</span>):</span></span><br><span class="line">    img_root = self.page1_input_field1_xml.text()  <span class="comment"># 标注图片路径</span></span><br><span class="line">    xml_root = self.page1_input_field2_xml.text()  <span class="comment"># xml地址</span></span><br><span class="line">    input_classes = self.page1_input_field3_xml.text()  <span class="comment"># classes列表</span></span><br><span class="line">    classes = input_classes[<span class="number">1</span>:-<span class="number">1</span>].split(<span class="string">&#x27;, &#x27;</span>)  <span class="comment"># 获取为str类型数据，转为list</span></span><br><span class="line">    txt_root = self.page1_input_field4_xml.text()  <span class="comment"># txt保存地址</span></span><br></pre></td></tr></table></figure><h4 id="6、按钮触发函数"><a href="#6、按钮触发函数" class="headerlink" title="6、按钮触发函数"></a>6、按钮触发函数</h4><p>点击按钮触发槽函数，xml2txt_button_click替换为自己的功能函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该部分可添加到步骤3中</span></span><br><span class="line">self.page1_submit_button_xml = QPushButton(<span class="string">&quot;运行&quot;</span>, self.page1_xml)</span><br><span class="line">self.page1_submit_button_xml.setGeometry(<span class="number">250</span>, <span class="number">200</span>, <span class="number">70</span>, <span class="number">30</span>)</span><br><span class="line">self.page1_submit_button_xml.clicked.connect(self.xml2txt_button_click)  <span class="comment"># 运行按钮调用函数</span></span><br></pre></td></tr></table></figure><h4 id="7、函数运行反馈"><a href="#7、函数运行反馈" class="headerlink" title="7、函数运行反馈"></a>7、函数运行反馈</h4><p>运行成功提示success，运行失败提示错误详情。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -----异常处理，运行反馈-----</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 功能函数xml2txt替换为自己的函数</span></span><br><span class="line">    xml2txt(xml_root, xml_name, txt_save_path, classes, img_root)</span><br><span class="line">    <span class="comment"># 成功运行提示</span></span><br><span class="line">    QMessageBox.information(self, <span class="string">&#x27;Success&#x27;</span>, <span class="string">&#x27;Your program has run successfully!&#x27;</span>, QMessageBox.Ok)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 捕获异常并显示错误消息</span></span><br><span class="line">    QMessageBox.critical(self, <span class="string">&#x27;Error&#x27;</span>, <span class="string">f&quot;An error occurred: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="8、主程序"><a href="#8、主程序" class="headerlink" title="8、主程序"></a>8、主程序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    window = MyWindow()</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h3 id="全部代码："><a href="#全部代码：" class="headerlink" title="全部代码："></a>全部代码：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget, QPushButton, QLabel, QLineEdit, QStackedWidget, \</span><br><span class="line">    QComboBox, QMessageBox</span><br><span class="line"><span class="keyword">from</span> utils.label_utils <span class="keyword">import</span> xml2txt, change_xml_label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主界面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyWindow</span>(<span class="params">QWidget</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ----------创建界面----------</span></span><br><span class="line">        self.setWindowTitle(<span class="string">&#x27;数据处理平台&#x27;</span>)</span><br><span class="line">        self.resize(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">        <span class="comment"># self.setGeometry(100, 100, 640, 480)</span></span><br><span class="line"></span><br><span class="line">        self.button_txt = QPushButton(<span class="string">&#x27;功能选择&#x27;</span>, self)</span><br><span class="line">        self.button_txt.setGeometry(<span class="number">20</span>, <span class="number">20</span>, <span class="number">130</span>, <span class="number">30</span>)</span><br><span class="line">        self.button_txt.clicked.connect(self.show_combobox)  <span class="comment"># 传入自定义参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ----------创建下拉菜单----------</span></span><br><span class="line">        <span class="comment"># 创建txt下拉菜单</span></span><br><span class="line">        self.combobox_txt = QComboBox(self)</span><br><span class="line">        self.combobox_txt.addItems([<span class="string">&#x27;未选择&#x27;</span>, <span class="string">&#x27;xml2txt&#x27;</span>, <span class="string">&#x27;change xml label&#x27;</span>])</span><br><span class="line">        <span class="comment"># self.combobox_txt.hide()  # 初始隐藏下拉菜单</span></span><br><span class="line">        <span class="comment"># self.combobox_txt.setCurrentIndex(-1)  # 设置初始索引为 -1, 必须在添加控件之前设置</span></span><br><span class="line">        self.combobox_txt.setGeometry(self.button_txt.x(), self.button_txt.y() + self.button_txt.height(), <span class="number">130</span>, <span class="number">30</span>)</span><br><span class="line">        <span class="comment"># self.combobox_txt.move(self.button_txt.x(), self.button_txt.y() + self.button_txt.height())  # 移动控件到下（x,y）位置</span></span><br><span class="line">        self.combobox_txt.activated.connect(</span><br><span class="line">            <span class="keyword">lambda</span>: self.switch_page(self.combobox_txt, self.stacked_widget))  <span class="comment"># 绑定选择事件, activated会自动传输index</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ----------创建下拉菜单对应的切换界面----------</span></span><br><span class="line">        <span class="comment"># -----界面切换模块-----</span></span><br><span class="line">        self.stacked_widget = QStackedWidget(self)  <span class="comment"># 创建叠加窗口</span></span><br><span class="line">        self.stacked_widget.setGeometry(<span class="number">50</span>, <span class="number">100</span>, <span class="number">600</span>, <span class="number">600</span>)  <span class="comment"># 设置窗口位置</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># page0 默认空界面</span></span><br><span class="line">        self.page0_xml = QWidget()</span><br><span class="line">        self.stacked_widget.addWidget(self.page0_xml)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -----创建处理界面-----</span></span><br><span class="line">        <span class="comment"># page1  xml to txt</span></span><br><span class="line">        self.page1_xml = QWidget()</span><br><span class="line"></span><br><span class="line">        self.page1_label1_xml = QLabel(<span class="string">&#x27;img_root:&#x27;</span>, self.page1_xml)  <span class="comment"># 在page1里面添加输入框控件</span></span><br><span class="line">        self.page1_label1_xml.setGeometry(<span class="number">25</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">        self.page1_input_field1_xml = QLineEdit(self.page1_xml)</span><br><span class="line">        self.page1_input_field1_xml.setPlaceholderText(<span class="string">&quot;输入图片地址：./ImgFilePath&quot;</span>)</span><br><span class="line">        self.page1_input_field1_xml.setGeometry(<span class="number">110</span>, <span class="number">25</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page1_label2_xml = QLabel(<span class="string">&#x27;xml_root:&#x27;</span>, self.page1_xml)</span><br><span class="line">        self.page1_label2_xml.setGeometry(<span class="number">25</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># (x,y, h, w)</span></span><br><span class="line">        self.page1_input_field2_xml = QLineEdit(self.page1_xml)</span><br><span class="line">        self.page1_input_field2_xml.setPlaceholderText(<span class="string">&quot;输入xml地址：./XmlFilePath&quot;</span>)</span><br><span class="line">        self.page1_input_field2_xml.setGeometry(<span class="number">110</span>, <span class="number">55</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page1_label3_xml = QLabel(<span class="string">&#x27;classes:&#x27;</span>, self.page1_xml)</span><br><span class="line">        self.page1_label3_xml.setGeometry(<span class="number">25</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">        self.page1_input_field3_xml = QLineEdit(self.page1_xml)</span><br><span class="line">        self.page1_input_field3_xml.setPlaceholderText(<span class="string">&quot;输入类别列表格式：[fg, a1], 字符也不用引号&quot;</span>)</span><br><span class="line">        self.page1_input_field3_xml.setGeometry(<span class="number">110</span>, <span class="number">85</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page1_label4_xml = QLabel(<span class="string">&#x27;save_txt_root:&#x27;</span>, self.page1_xml)</span><br><span class="line">        self.page1_label4_xml.setGeometry(<span class="number">10</span>, <span class="number">110</span>, <span class="number">120</span>, <span class="number">30</span>)  <span class="comment"># (x,y, h, w)</span></span><br><span class="line">        self.page1_input_field4_xml = QLineEdit(self.page1_xml)</span><br><span class="line">        self.page1_input_field4_xml.setPlaceholderText(<span class="string">&quot;输入txt保存地址：./TxtFilePath&quot;</span>)</span><br><span class="line">        self.page1_input_field4_xml.setGeometry(<span class="number">130</span>, <span class="number">115</span>, <span class="number">280</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page1_submit_button_xml = QPushButton(<span class="string">&quot;运行&quot;</span>, self.page1_xml)</span><br><span class="line">        self.page1_submit_button_xml.setGeometry(<span class="number">250</span>, <span class="number">200</span>, <span class="number">70</span>, <span class="number">30</span>)</span><br><span class="line">        self.page1_submit_button_xml.clicked.connect(self.xml2txt_button_click)  <span class="comment"># 运行按钮调用函数</span></span><br><span class="line"></span><br><span class="line">        self.stacked_widget.addWidget(self.page1_xml)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># page2  change xml label</span></span><br><span class="line">        self.page2_xml = QWidget()</span><br><span class="line"></span><br><span class="line">        self.page2_label1_xml = QLabel(<span class="string">&#x27;xml root:&#x27;</span>, self.page2_xml)</span><br><span class="line">        self.page2_label1_xml.setGeometry(<span class="number">25</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># 设置输入框1的位置和大小 (x,y, w, h)</span></span><br><span class="line">        self.page2_input_field1_xml = QLineEdit(self.page2_xml)  <span class="comment"># 在窗口里面添加输入框控件</span></span><br><span class="line">        self.page2_input_field1_xml.setPlaceholderText(<span class="string">&quot;输入xml存放地址：./XmlFilePath&quot;</span>)</span><br><span class="line">        self.page2_input_field1_xml.setGeometry(<span class="number">110</span>, <span class="number">25</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page2_label2_xml = QLabel(<span class="string">&#x27;ori cla:&#x27;</span>, self.page2_xml)</span><br><span class="line">        self.page2_label2_xml.setGeometry(<span class="number">25</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># 设置输入框1的位置和大小 (x,y, w, h)</span></span><br><span class="line">        self.page2_input_field2_xml = QLineEdit(self.page2_xml)  <span class="comment"># 在窗口里面添加输入框控件</span></span><br><span class="line">        self.page2_input_field2_xml.setPlaceholderText(<span class="string">&quot;输入需要修改的标签名：car or person...&quot;</span>)</span><br><span class="line">        self.page2_input_field2_xml.setGeometry(<span class="number">110</span>, <span class="number">55</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page2_label3_xml = QLabel(<span class="string">&#x27;mod cla:&#x27;</span>, self.page2_xml)</span><br><span class="line">        self.page2_label3_xml.setGeometry(<span class="number">25</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># 设置输入框1的位置和大小 (x,y, w, h)</span></span><br><span class="line">        self.page2_input_field3_xml = QLineEdit(self.page2_xml)  <span class="comment"># 在窗口里面添加输入框控件</span></span><br><span class="line">        self.page2_input_field3_xml.setPlaceholderText(<span class="string">&quot;输入修改后的标签名：car or person...&quot;</span>)</span><br><span class="line">        self.page2_input_field3_xml.setGeometry(<span class="number">110</span>, <span class="number">85</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page2_label4_xml = QLabel(<span class="string">&#x27;param:&#x27;</span>, self.page2_xml)</span><br><span class="line">        self.page2_label4_xml.setGeometry(<span class="number">25</span>, <span class="number">110</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># 设置输入框1的位置和大小 (x,y, w, h)</span></span><br><span class="line">        self.page2_input_field4_xml = QLineEdit(self.page2_xml)  <span class="comment"># 在窗口里面添加输入框控件</span></span><br><span class="line">        self.page2_input_field4_xml.setPlaceholderText(<span class="string">&quot;是否执行不为ori都修改为mod参数：0(否) or 1（是）&quot;</span>)</span><br><span class="line">        self.page2_input_field4_xml.setGeometry(<span class="number">110</span>, <span class="number">115</span>, <span class="number">330</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.page2_submit_button_xml = QPushButton(<span class="string">&quot;运行&quot;</span>, self.page2_xml)  <span class="comment"># 在窗口里面添加按钮控件</span></span><br><span class="line">        self.page2_submit_button_xml.setGeometry(<span class="number">250</span>, <span class="number">200</span>, <span class="number">70</span>, <span class="number">30</span>)</span><br><span class="line">        self.page2_submit_button_xml.clicked.connect(self.change_xml_label_button_click)</span><br><span class="line"></span><br><span class="line">        self.stacked_widget.addWidget(self.page2_xml)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------方法----------</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_combobox</span>(<span class="params">self, custom_param</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.combobox_txt.isHidden():</span><br><span class="line">            self.combobox_txt.show()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.combobox_txt.hide()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -----下拉选项触发-----</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">switch_page</span>(<span class="params">self, combobox, stacked_widget</span>):</span></span><br><span class="line">        index = combobox.currentIndex()</span><br><span class="line">        stacked_widget.setCurrentIndex(index)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">xml2txt_button_click</span>(<span class="params">self</span>):</span></span><br><span class="line">        img_root = self.page1_input_field1_xml.text()  <span class="comment"># 标注图片路径</span></span><br><span class="line">        xml_root = self.page1_input_field2_xml.text()  <span class="comment"># xml地址</span></span><br><span class="line">        input_classes = self.page1_input_field3_xml.text()  <span class="comment"># classes列表</span></span><br><span class="line">        classes = input_classes[<span class="number">1</span>:-<span class="number">1</span>].split(<span class="string">&#x27;, &#x27;</span>)  <span class="comment"># 获取为str类型数据，转为list</span></span><br><span class="line">        txt_root = self.page1_input_field4_xml.text()  <span class="comment"># txt保存地址</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> xml_name <span class="keyword">in</span> os.listdir(xml_root):</span><br><span class="line">                <span class="built_in">print</span>(xml_name)</span><br><span class="line">                txt_save_path = os.path.join(txt_root, xml_name.replace(<span class="string">&#x27;xml&#x27;</span>, <span class="string">&#x27;txt&#x27;</span>))</span><br><span class="line">                xml2txt(xml_root, xml_name, txt_save_path, classes, img_root)</span><br><span class="line">            <span class="comment"># 成功运行提示</span></span><br><span class="line">            QMessageBox.information(self, <span class="string">&#x27;Success&#x27;</span>, <span class="string">&#x27;Your program has run successfully!&#x27;</span>, QMessageBox.Ok)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># 捕获异常并显示错误消息</span></span><br><span class="line">            QMessageBox.critical(self, <span class="string">&#x27;Error&#x27;</span>, <span class="string">f&quot;An error occurred: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="comment"># self.page1_input_field1_xml.clear()</span></span><br><span class="line">            <span class="comment"># self.page1_input_field2_xml.clear()</span></span><br><span class="line">            <span class="comment"># self.page1_input_field3_xml.clear()</span></span><br><span class="line">            <span class="comment"># self.page1_input_field4_xml.clear()</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change_xml_label_button_click</span>(<span class="params">self</span>):</span></span><br><span class="line">        xml_root = self.page2_input_field1_xml.text()</span><br><span class="line">        origin = self.page2_input_field2_xml.text()</span><br><span class="line">        modify = self.page2_input_field3_xml.text()</span><br><span class="line">        input_param = self.page2_input_field4_xml.text()</span><br><span class="line">        <span class="keyword">if</span> input_param == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            reverse_param = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            reverse_param = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            change_xml_label(xml_root, origin, modify, reverse_param)</span><br><span class="line">            <span class="comment"># 成功运行</span></span><br><span class="line">            QMessageBox.information(self, <span class="string">&#x27;Success&#x27;</span>, <span class="string">&#x27;Your program has run successfully!&#x27;</span>, QMessageBox.Ok)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># 捕获异常并显示错误消息</span></span><br><span class="line">            QMessageBox.critical(self, <span class="string">&#x27;Error&#x27;</span>, <span class="string">f&quot;An error occurred: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    window = MyWindow()</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h3 id="界面展示："><a href="#界面展示：" class="headerlink" title="界面展示："></a>界面展示：</h3><p>下拉框可选择2个功能，存在2个切换界面，根据输入框文字提示输入参数格式，点击运行，运行成功返回成功提示，运行失败返回失败提示。</p><p><img src="%E7%95%8C%E9%9D%A2%E5%B1%95%E7%A4%BA.png" alt="主界面"></p><p><img src="%E8%BF%90%E8%A1%8C%E6%88%90%E5%8A%9F%E6%8F%90%E7%A4%BA.png" alt="成功提示"></p><p><img src="%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA.png" alt="错误提示"></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt入门1</title>
      <link href="/2024/02/20/PyQt%E5%85%A5%E9%97%A81/"/>
      <url>/2024/02/20/PyQt%E5%85%A5%E9%97%A81/</url>
      
        <content type="html"><![CDATA[<h3 id="："><a href="#：" class="headerlink" title="："></a>：</h3><h3 id="PyQt学习前言："><a href="#PyQt学习前言：" class="headerlink" title="PyQt学习前言："></a>PyQt学习前言：</h3><p>针对一些工作中的重复部分，将功能做成可视化界面引导执行并打包成exe，可让小伙伴一键上手操作，提高工作效率。</p><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p>直接pip安装即可，使用百度镜像安装命令如下，此处pyinstaller模块用来将python代码打包成exe。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://mirrors.baidu.com/pypi/simple PyQt5 pyinstaller</span><br></pre></td></tr></table></figure><h3 id="实际使用："><a href="#实际使用：" class="headerlink" title="实际使用："></a>实际使用：</h3><h4 id="1、窗口构建"><a href="#1、窗口构建" class="headerlink" title="1、窗口构建"></a>1、窗口构建</h4><p>常用Qlabel（文本控件）、QLineEdit（输入框）、QPushButoon（按钮）、按钮触发功能实现，其他待学习。</p><h4 id="2、全部代码："><a href="#2、全部代码：" class="headerlink" title="2、全部代码："></a>2、全部代码：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget, QPushButton, QLabel, QVBoxLayout, QLineEdit</span><br><span class="line"><span class="keyword">from</span> utils.excel_utils <span class="keyword">import</span> numberAndCount  <span class="comment"># 个人功能函数，替换</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyWindow</span>(<span class="params">QWidget</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 创建界面</span></span><br><span class="line">        self.setWindowTitle(<span class="string">&#x27;测试平台&#x27;</span>)  <span class="comment"># 界面名称</span></span><br><span class="line">        self.resize(<span class="number">640</span>,<span class="number">480</span>)</span><br><span class="line">        <span class="comment"># self.setGeometry(100, 100, 640, 480)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在窗口里面添加label控件</span></span><br><span class="line">        self.label1 = QLabel(<span class="string">&#x27;Path1:&#x27;</span>, self)</span><br><span class="line">        self.label1.setGeometry(<span class="number">20</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># 设置文本框的位置和大小 (x,y, w, h)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在窗口里面添加输入框控件</span></span><br><span class="line">        self.input_field1 = QLineEdit(self)</span><br><span class="line">        self.input_field1.setPlaceholderText(<span class="string">&quot;输入统计地址：./tmp_data&quot;</span>)  <span class="comment"># 在输入框中添加提示</span></span><br><span class="line">        self.input_field1.setGeometry(<span class="number">90</span>, <span class="number">25</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.label2 = QLabel(<span class="string">&#x27;Path2:&#x27;</span>, self)</span><br><span class="line">        self.label2.setGeometry(<span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">30</span>)  <span class="comment"># (x,y, h, w)</span></span><br><span class="line">        self.input_field2 = QLineEdit(self)  <span class="comment"># 创建</span></span><br><span class="line">        self.input_field2.setPlaceholderText(<span class="string">&quot;输入excel保存地址：./tmp.xlsx&quot;</span>) <span class="comment"># 在输入框中添加提示</span></span><br><span class="line">        self.input_field2.setGeometry(<span class="number">90</span>, <span class="number">55</span>, <span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在窗口里面添加按钮控件</span></span><br><span class="line">        self.submit_button = QPushButton(<span class="string">&quot;运行&quot;</span>, self)</span><br><span class="line">        self.submit_button.setGeometry(<span class="number">50</span>, <span class="number">100</span>, <span class="number">70</span>, <span class="number">30</span>)</span><br><span class="line">        self.submit_button.clicked.connect(self.on_button_click)  <span class="comment"># 按钮触发</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_button_click</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 函数调用，替换成自己的函数</span></span><br><span class="line">        <span class="comment"># train_path_root = &quot;./tmp_data&quot;</span></span><br><span class="line">        <span class="comment"># excel_save_path = &quot;./tmp.xlsx&quot;</span></span><br><span class="line">        train_path_root = self.input_field1.text()</span><br><span class="line">        excel_save_path = self.input_field2.text()</span><br><span class="line">        numberAndCount(train_path_root, excel_save_path)</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    window = MyWindow()  <span class="comment"># 继承QWidget类</span></span><br><span class="line">    window.show()    <span class="comment"># 界面显示</span></span><br><span class="line">    sys.exit(app.exec_())  <span class="comment"># 循环显示界面</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可视化界面如下：</p><p><img src="blog/source/_posts/可视化界面.png"></p><h4 id="3、打包exe："><a href="#3、打包exe：" class="headerlink" title="3、打包exe："></a>3、打包exe：</h4><p>在目标目录打开终端，使用python的pyinstaller对.py文件进行打包，如果打包的程序是图形界面程序，添加-w，则打包后打开exe文件将只出现图形界面，命令行窗口将被隐藏。命令如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -w .py文件</span><br></pre></td></tr></table></figure><p>将在该目录下生成dist文件和.spec，exe在dist文件下。</p><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>主要出现在打包的时候：</p><p>问题1、打包时出现RecursionError: maximum recursion depth exceeded错误，网上搜索表示程序中包含递归函数，但经过检查后代码中并不存在.</p><p>解决：<strong>重新安装pyinstaller后解决</strong>。</p><p>问题2、使用conda环境打包时，打包后的exe文件打开后提示无法引用pyqt5。</p><p>解决：<strong>使用 –path 将pyqt5的runw.exe地址手动传入。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller --path=d:\software\Anaconda3\envs\pytorch\Lib\site-packages\PyInstal ler\bootloader\Windows-64bit-intel\runw.exe -w pyqt.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pytorch设置随机数</title>
      <link href="/2024/01/19/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%951-pytorch%E8%AE%BE%E7%BD%AE%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
      <url>/2024/01/19/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%951-pytorch%E8%AE%BE%E7%BD%AE%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="："><a href="#：" class="headerlink" title="："></a>：</h3><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>通过设置随机种子，使训练结果可复现，有效对比模型测试结果；</p><h3 id="pytorch如何设置："><a href="#pytorch如何设置：" class="headerlink" title="pytorch如何设置："></a>pytorch如何设置：</h3><p>训练过程中的随机数包含：初始权重、随机数据增强、数据读取顺序等，将这些随机数固定，按理可保证训练结果一致。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置随机种子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_seed</span>(<span class="params">seed</span>):</span></span><br><span class="line">    random.seed(seed)</span><br><span class="line">    np.random.seed(seed)</span><br><span class="line">    torch.manual_seed(seed)</span><br><span class="line">    torch.cuda.manual_seed(seed)</span><br><span class="line">    torch.cuda.manual_seed_all(seed)</span><br><span class="line">    torch.backends.cudnn.deterministic = <span class="literal">True</span>   </span><br><span class="line">    torch.backends.cudnn.benchmark = <span class="literal">False</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置Dataloader的种子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_random_Dataloader</span>(<span class="params">worker_id, rank, seed</span>):</span></span><br><span class="line">    worker_seed = rank + seed</span><br><span class="line">    random.seed(worker_seed)</span><br><span class="line">    np.random.seed(worker_seed)</span><br><span class="line">    torch.manual_seed(worker_seed)</span><br><span class="line"></span><br><span class="line">set_seed(<span class="number">30</span>)</span><br><span class="line">set_random_Dataloader()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预处理、训练模型</span></span><br></pre></td></tr></table></figure><p> 参考：<a href="https://blog.csdn.net/weixin_44791964/article/details/131622957">https://blog.csdn.net/weixin_44791964/article/details/131622957</a></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-AI事件回顾</title>
      <link href="/2024/01/09/2023-AI%E4%BA%8B%E4%BB%B6%E5%9B%9E%E9%A1%BE/"/>
      <url>/2024/01/09/2023-AI%E4%BA%8B%E4%BB%B6%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<p>基础：22年11月30日，ChatGPT横空出世</p><p>23年2月：</p><ol><li>ChatGPT plus 版本上线；</li><li>微软宣布将ChatGPT功能集成到New Bing；</li><li>Meta发布LLaMa</li></ol><p>23年3月：</p><ol><li>OpenAI推出ChatGPT API；</li><li>OpenAI发布GPT-4</li><li>百度发布文心一言</li></ol><p>23年4月： </p><ol><li>Meta发布Segment Anything</li></ol><p>23年5月：</p><ol><li>特斯拉人形机器人（流畅行走、抓取物体）</li></ol><p>===============</p><p>23年6月：</p><ol><li>Runway Gen-2</li></ol><p>23年7月：</p><ol><li>Llama2开源；</li><li> overflow AI</li></ol><p>23年9月：</p><ol><li>OpenAI将DALL.E 1升级至DALL.E 3；</li><li>微软 EvoDiff；</li><li>HeyGen；</li><li>特斯拉Optimus可自主对物体进行分类（端到端训练）。</li></ol><p>23年10月：</p><ol><li>文心大模型4.0发布</li></ol><p>23年11月：</p><ol><li>Pika 1.0发布</li></ol><p>23年12月：</p><ol><li>谷歌DeepMind发布Gemini模型；</li><li>Mixtral AI开源了一个Mixtral 8x7B MoE模型；</li><li>MidJounery V6发布</li></ol><p>整体领域：AIGC</p><p>细分方向：图像生成（Midjourney、DALL-E3、Shutterstock AI）、视频生成（HeyGen、Runway Gen-2、Pika）、文本生成（Gemini、overflowAI、Llama、GPT-4）、图像分割（SAM）</p><p>发展：</p><ol><li>图像生成：GAN&rarr;DiffusionModel（扩散模型）&rarr;stable Diffusion（文本生成图像）</li><li>文本生成：RNN&rarr;Transformer&rarr;GPT</li></ol><p>应用：</p><p><img src="aigc.png" alt="应用："></p><p>图片来源：TE智库《企业AIGC商业落地应用研究报告》</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
